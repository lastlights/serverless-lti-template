# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  lti-demo

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  LTIRegistration:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/lti/registration
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Events:
        Api:
          Type: Api
          Properties:
            Path: /lti/registration
            Method: GET
            Auth:
              Authorizer: NONE
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2022"
        Format: "esm"
        Sourcemap: false
        OutExtension:
          - .js=.mjs
        EntryPoints:
        - src/index.ts

  # This is a Lambda function config associated with the source code: get-all-items.js
  OIDCInitiation:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/lti/oidc_initiation
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Layers:
        - !Ref LambdaLayer
      Events:
        GetApi:
          Type: Api
          Properties:
            Path: /lti/authorize_redirect
            Method: GET
            Auth:
              Authorizer: NONE
        PostApi:
          Type: Api
          Properties:
            Path: /lti/authorize_redirect
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2022"
        Format: "esm"
        Sourcemap: false
        OutExtension:
          - .js=.mjs
        EntryPoints:
        - src/index.ts
        External:
         - '@aws-sdk/client-dynamodb'
         - '@aws-sdk/lib-dynamodb'
         - 'lti-util'
         - 'jose'
         - 'uuid'
  # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable
  
  LTILaunch:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/lti/launch
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Layers:
        - !Ref LambdaLayer
      Events:
        Api:
          Type: Api
          Properties:
            Path: /lti/launch
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2022"
        Format: "esm"
        Sourcemap: false
        OutExtension:
          - .js=.mjs
        EntryPoints:
        - src/index.ts
        External:
         - 'lti-util'
         - 'jose'
  # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: Lambda-Layer
      ContentUri: layers/lti-dependency-layer
      CompatibleRuntimes:
        - nodejs20.x
    Metadata: # Manage esbuild properties
      BuildMethod: makefile

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
